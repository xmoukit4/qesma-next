rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /friendRequests/{requestId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
    }

    match /groups/{groupId} {
      allow read: if request.auth != null && request.auth.uid in resource.data.members;
      allow write: if request.auth != null && request.auth.uid in resource.data.members;
      // Allow a user to add themselves to a group when accepting an invitation
      allow update: if request.auth != null && 
        request.resource.data.members == resource.data.members.concat([request.auth.uid]);
    }

    match /groupInvitations/{invitationId} {
      allow read, delete: if request.auth != null && request.auth.uid == resource.data.receiverId;
      // Allow group members to create invitations
      allow create: if request.auth != null && get(/databases/$(database)/documents/groups/$(request.resource.data.groupId)).data.members.hasAny([request.auth.uid]);
    }
  }
}
